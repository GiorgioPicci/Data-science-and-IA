# -*- coding: utf-8 -*-
"""Ciência de dados e IA.pynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oi1rw0RoFH6-L5RN6ttT7O5FwBbIq4M4

# Data Science Project - Sales Forecast

- Our challenge is to be able to predict the sales we will have in a given period based on ad spend on the 3 major networks that the Hashtag company invests in: TV, Newspaper and Radio

- Base de Dados: https://drive.google.com/drive/folders/1o2lpxoi9heyQV1hIlsHXWSfDkBPtze-V?usp=sharing
"""

from google.colab import drive
drive.mount('/content/drive')

"""### Step by Step of a Data Science Project

- Step 1: Understanding the Challenge
- Step 2: Understanding the Area/Company
- Step 3: Data Extraction/Acquisition
- Step 4: Data Adjustment (Treatment/Cleaning)
- Step 5: Exploratory Analysis
- Step 6: Modeling + Algorithms (This is where Artificial Intelligence comes in, if necessary)
- Step 7: Interpretation of Results

# Data Science Project - Sales Forecast

- Our challenge is to be able to predict the sales we will have in a given period based on ad spend on the 3 major networks that the Hashtag company invests in: TV, Newspaper and Radio
- TV, Newspaper and Radio are in thousands of reais
- Sales are in million

#### Import the Data base
"""

!pip install pandas 
!pip install numpy
!pip install openpyxl
!pip install matplotlib
!pip install seaborn
!pip install scikit-learn

import csv
import pandas as pd

table = pd.read_csv("/content/drive/MyDrive/python intensivão documentos /advertising.csv")
display(table)

"""#### Exploratory Analysis
- Let's try to visualize how the information of each item is distributed
- Let's see the correlation between each of the itemss
"""

#find the correlation of items within the table
#use graphics
import seaborn as sns #graphics generator 
import matplotlib.pyplot as plt #graphics generator 

#create graph 
sns.pairplot(table)
#show the grafic
plt.show()

#create graph 
sns.heatmap(table.corr(), cmap= "Wistia", annot =True)
#show the grafic
plt.show()

"""#### With this, we can start preparing the data to train the Machine Learning Model

- Separating into training data and test data
"""

from sklearn.model_selection import train_test_split
# creating AI
#separate data into X and Y 
y = table ["Vendas"]
x = table [["TV","Radio","Jornal"]]
 
#separate data into TRAINING and TEST
x_treino, x_teste , y_treino, y_teste = train_test_split(x, y)
#train in the mock

"""#### We have a regression problem - Let's choose the models we are going to use:

- Linear Regression
- RandomForest 
"""

from sklearn import linear_model
# import
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor

# create artificial intelligence
modelo_Regressaolinear = LinearRegression()
modelo_arvoreDecissao = RandomForestRegressor()

# training artificial intelligence
modelo_Regressaolinear.fit(x_treino, y_treino)
modelo_arvoreDecissao.fit(x_treino, y_treino)

"""#### AI Test and Best Model Assessment

- Let's use R² -> says the % that our model can explain what happens
"""

from sklearn.metrics import r2_score
# create the forecasts
previsao_regressaoLinear = modelo_Regressaolinear.predict(x_teste)
previssao_arvoredecisao = modelo_arvoreDecissao.predict(x_teste)

# compare the predictions with the feedback
print(r2_score(y_teste, previsao_regressaoLinear))
print(r2_score(y_teste, previssao_arvoredecisao))

"""#### Visualização Gráfica das Previsões"""

tabela_auxiliar = pd.DataFrame()
tabela_auxiliar["y_teste"] = y_teste
tabela_auxiliar["Previsoes ArvoreDecisao"] = previssao_arvoredecisao
tabela_auxiliar["Previsoes Regressao Linear"] = previsao_regressaoLinear

plt.figure(figsize=(15,6))
sns.lineplot(data=tabela_auxiliar)
plt.show()

"""#### Making a new prediction."""

#new prediction 
novos_valores = pd.read_csv("/content/drive/MyDrive/python intensivão documentos /novos.csv")
display(novos_valores)
nova_previsao = modelo_arvoreDecissao.predict(novos_valores)
display(nova_previsao)